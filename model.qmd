---
title: "Model"
author: "Trevor S"
---

## Setup

We install and load the necessary packages, along with functions from prior chapters and `all_data`.

```{r,  message = FALSE, warning = FALSE}
# install.packages("tidyverse")
# install.packages("dplyr")
# install.packages("gt")
library(tidyverse)
library(dplyr)
library(gt)

source("functions.R") # load functions defined in prior chapters

all_data <- read.csv("all_data.csv")
```

## Introduction

In the model step, we will develop a model for predicting the value of picks in the NHL Entry Draft based on historical data. We will first start with a linear model, then progress to a logarithmic model, and then conclude by finding a model via non-linear regression.

## Code

```{r}
prop_knn_model <- nls(value_ps ~ SSlogis(log(overall), phi1, phi2, phi3), 
                 data = knn_prop)

pred_data_prop_knn <- data.frame(overall = seq(1, 224))
pred_vals_prop_knn <- predict(prop_knn_model, pred_data_prop_knn)

pred_data <- mutate(pred_data_prop_knn, value_ps = pred_vals_prop_knn)

ggplot(pred_data, aes(x = overall, y = value_ps)) + 
  geom_line(lwd = 1.5, col = "red") + 
  geom_point(data = knn_prop)



raw_knn_model <- nls(value_ps ~ SSlogis(log(overall), phi1, phi2, phi3), 
                 data = knn_raw)

pred_data_raw_knn <- data.frame(overall = seq(1, 224))
pred_vals_raw_knn <- predict(raw_knn_model, pred_data_raw_knn)

pred_data <- mutate(pred_data, value_ps = pred_vals_raw_knn)

ggplot(pred_data, aes(x = overall, y = value_ps)) + 
  geom_line(lwd = 1.5, col = "red") + 
  geom_point(data = knn_raw)
```

```{r}
mean_data <- all_data |> 
  group_by(overall) |> 
  summarize(mean_ps = mean(ps))

raw_model <- nls(mean_ps ~ SSlogis(log(overall), phi1, phi2, phi3), 
                 data = mean_data)

pred_data_raw <- data.frame(overall = seq(1, 224))
pred_vals_raw <- predict(raw_model, pred_data_raw)

pred_data_raw <- mutate(pred_data_raw, value_ps = pred_vals_raw)

ggplot(pred_data, aes(x = overall, y = value_ps)) + 
  geom_line(lwd = 1.5, col = "red") + 
  geom_point(data = pred_data_raw)
```
