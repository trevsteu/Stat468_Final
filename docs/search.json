[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat468 Final Project",
    "section": "",
    "text": "1 Introduction",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Stat468 Final Project",
    "section": "1.1 Abstract",
    "text": "1.1 Abstract\nIn the days of and leading up to the 2025 NHL Entry Draft there were a total of 18 trades which only included draft picks. This report aims to use player contribution data to determine the relative value of selections in the NHL Entry Draft. To do this, data will be imported from Hockey Reference, and a weighted \\(k\\)-nearest neighbours algorithm will be used to estimate the value of each pick based on historical outcomes. Knowing the relative value of picks allows NHL teams to both determine whether they should accept trade offers they have received as well as propose favourable trades to other teams. The RShiny app component of this project will allow users to interactively check the fairness of potential trades.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Stat468 Final Project",
    "section": "1.2 Data",
    "text": "1.2 Data\nThe data used by this report is imported from Hockey Reference, which has data on the NHL Draft and player games played and point share counts dating back to 1963, though we will only use a subset of this data as will be explained later. Each row on Hockey Reference is one player selected, and the columns included on the site are:\n\nOverall: the selection mumber where the player was selected.\nTeam: the team that selected the player.\nName, Nat, Pos, Age: the player’s name, nationality, position, at age at the time of the draft.\nTo: the last year a player played in the NHL. For players who never played in the NHL this will be the empty string, for those who are still playing it will be 2025.\nAmateur Team: the team the player was drafted from (confusingly this could be a pro European team).\nGP, G, A, PTS, +/-, PIM: the player’s career games played, goals, assists, points (goals plus assists), plus minus, and penalty minutes. For players who never played in the NHL this will be the empty string.\nGP, W, L, T/O, SV%, GAA: the goalie’s career games played, wins, losses, ties plus overtime losses, save percentage, and goals against average. For skater and goalies who never played in the NHL all of these columns will be the empty string.\nPS: the player’s estimated point share, or career points added to their team (here we mean points in the standings, not goals and assists). There is more info on point share here.\n\nNote that we will only use a subset of these columns, as will be explained in the Tidy chapter.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "index.html#constraints",
    "href": "index.html#constraints",
    "title": "Stat468 Final Project",
    "section": "1.3 Constraints",
    "text": "1.3 Constraints\nThere are a number of technical and practical constraints at play. Here are some of them:\n\nThere have only been 63 drafts in NHL history, but drafts which occurred too long ago are likely not relevant and drafts which occurred too recently are difficult to evaluate. This will be discussed further in the Import chapter.\nPlayers drafted earlier in a draft (ie with a better pick) typically get more opportunities than players selected in the later rounds. In particular, teams often fall victim to the sunk cost fallacy because scouts and management look bad when players who they invested a high pick into don’t contribute to the team. This is very difficult to account for, and we will not attempt to remedy it.\nEstimating the value of a player’s career is not a trivial task. We will use point shares and games played, but these are not perfect metrics as they can still be dependent on external factors, such as the quality of the player’s team the opportunities the player was given.\nAdditionally, the value of the pick from the team’s perspective depends on how long the player stayed on their team and what (if anything) the team got when the player left the team (via trade, free agency, or retirement). We will ignore this because it is nearly impossible to take these factors into account.\nEvery draft has strong portions and weak portions. For example, one draft might have a very strong second round (by that we mean the prospects drafted in the second round in that particular draft are of higher quality than those typically drafted in the second round). Though this seems like an obvious point, it is crucial to mention because it is a significant asterisk on this report, which will assume all drafts have equal value structures (ie the quality of a prospect #27 overall of draft A is the same as the quality of a prospect drafted at # 27 of draft B)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "question.html",
    "href": "question.html",
    "title": "2  Question",
    "section": "",
    "text": "2.1 Approach\nDepending on the context, there can be countless approaches one could take to quantify the relative value of draft picks. As one example, one could estimate the value of draft picks by comparing the assets given up and acquired to previous trades and obtain the “market value” of each selection. In contrast, this report will take the approach of defining the value of selection \\(n\\) to be the average career contributions of players drafted \\(n^{\\text{th}}\\) overall. This report will estimate value of pick \\(n\\) by utilizing the point shares and games played by previous players selected at pick \\(n\\) along with its \\(k\\)-nearest neighbours.\nOne critical point that it is common knowledge in ice hockey circles and confirmed by the resources listed below is that NHL draft picks do not decrease in value linearly. In particular, the difference in value pick 1 and 30 is much greater than between pick 101 and 130.\nNote that if picks did decrease linearly in value linearly then it would be very easy to create a model of draft pick value since we would have\n\\[ v_1 = v_2 + c = v_3 + 2c = ... = v_{224} + 223c \\]\nwhere \\(c &gt; 0\\) and \\(v_i\\) is the value of the \\(i^{\\text{th}}\\) selection, meaning we would only have to find the value of \\(c\\). We will fit this model in the Model chapter and perform a statistical test to show that this model is not appropriate.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question</span>"
    ]
  },
  {
    "objectID": "question.html#previous-work",
    "href": "question.html#previous-work",
    "title": "2  Question",
    "section": "2.2 Previous Work",
    "text": "2.2 Previous Work\nSome work in this area has been done before, such as:\n\nValuation of NHL Draft Picks using Functional Data Analysis\nExamining the value of NHL Draft picks\nNHL draft: What does it cost to trade up?\n\nThis report will most closely follow the work done in the first paper listed. As an interesting aside, Eric Tulsky, who wrote the last article listed above in 2013, was hired as General Manager of the Carolina Hurricanes in 2024.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question</span>"
    ]
  },
  {
    "objectID": "import.html",
    "href": "import.html",
    "title": "3  Import",
    "section": "",
    "text": "3.1 Setup\nWe install and load the necessary packages.\nCode\n# install.packages(\"rvest\")\n# install.packages(\"stringr\")\n# install.packages(\"tidyverse\")\n# install.packages(\"janitor\")\nlibrary(rvest)\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(janitor)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "import.html#introduction",
    "href": "import.html#introduction",
    "title": "3  Import",
    "section": "3.2 Introduction",
    "text": "3.2 Introduction\nIn the import step we import the data required for this report. As mentioned before, we will be importing data from Hockey Reference. Before we import any data, it’s important to consider which and how many years we want to include in this analysis. Since the NHL has changed dramatically over the years, care must be taken to ensure we do not include drafts from too long ago. The primary concern with including data from too many years ago is that teams have likely changed their drafting approach over time. For example, teams may have become better at evaluating prospects as more advanced statistics have been developed, meaning that there are likely fewer late round draft “steals” in the 2020s than there were in the 1980s. Thus including drafts from the 1980s would skew our calculations because it would overestimate contributions by players who were drafted in the later rounds, since those players would potentially have been drafted sooner if the teams of the 1980s had the resources available to teams today. This would make our model a poor estimator of draft pick value for drafts occurring in the 2020s. That being said, players drafted in recent years have not had sufficient time to contribute to their teams, so we should not include drafts from too recently either. Ideally, we would wait until all players from a draft class have retired before including it in our analysis . Practically speaking, this is not feasible since players can have very long careers (for example, Alex Ovechkin was drafted in 2004 and is still playing) which would force us to include older drafts to maintain the same sample size, which is also not ideal as explained above.\nHaving considered this, we make the somewhat arbitrary decision to use the 25 drafts between and 1996 and 2020 (inclusive). Note that a significant portion of the players in our dataset are still active, so we will have to make an adjustment to account for this. Additionally, it makes sense to give more recent drafts more weight for the reasons described above. We will make both of these adjustments in the Transform chapter.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "import.html#code",
    "href": "import.html#code",
    "title": "3  Import",
    "section": "3.3 Code",
    "text": "3.3 Code\nWe start off by creating a function to import data from Hockey Reference.\n\n\nCode\nstart_year &lt;- 1996\nend_year &lt;- 2020\n\nimport_draft &lt;- function(year){\n  url &lt;- str_glue(\"https://www.hockey-reference.com/draft/NHL_{year}_entry.html\")\n  html &lt;- read_html(url)\n  Sys.sleep(5) # to avoid getting rate limited\n  draft_year_table &lt;- html |&gt; \n    html_element(\"table\") |&gt; \n    html_table() |&gt; \n    janitor::row_to_names(1) |&gt; \n    janitor::clean_names()\n  draft_year_table\n}\n\nhead(import_draft(start_year), 10)\n\n\n# A tibble: 10 × 21\n   overall team    player nat   pos   age   to    amateur_team gp    g     a    \n   &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 1       Ottawa… Chris… CA    D     18    2015  Prince Albe… 1179  71    217  \n 2 2       San Jo… Andre… RU    D     18    2008  Salavat Yul… 496   38    82   \n 3 3       New Yo… J.P. … CA    RW    18    2011  Val-d'Or Fo… 822   214   309  \n 4 4       Washin… Alexa… RU    C     18    2000  Barrie Colt… 3     0     0    \n 5 5       Dallas… Ric J… CA    D     18    2007  Soo Greyhou… 231   19    58   \n 6 6       Edmont… Boyd … CA    C     18    2009  Kitchener R… 627   67    112  \n 7 7       Buffal… Erik … US    LW/C  19    2007  Minnesota (… 545   52    76   \n 8 8       Boston… Johna… CA    D     18    2004  Medicine Ha… 44    0     1    \n 9 9       Anahei… Rusla… BY    D     21    2011  Las Vegas T… 917   45    159  \n10 10      New Je… Lance… CA    D     18    2004  Red Deer Re… 209   4     12   \n# ℹ 10 more variables: pts &lt;chr&gt;, x &lt;chr&gt;, pim &lt;chr&gt;, gp_2 &lt;chr&gt;, w &lt;chr&gt;,\n#   l &lt;chr&gt;, t_o &lt;chr&gt;, sv_percent &lt;chr&gt;, gaa &lt;chr&gt;, ps &lt;chr&gt;\n\n\nWe compare the first 10 rows of the 1996 draft table shown above with the table on Hockey Reference It seems that the function we created does what we want it to do. We can now proceed to the Tidy step.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "tidy.html",
    "href": "tidy.html",
    "title": "4  Tidy",
    "section": "",
    "text": "4.1 Setup\nCode\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)\nlibrary(stringr)\n\nsource(\"functions.R\") # load functions defined in prior chapters",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy</span>"
    ]
  },
  {
    "objectID": "tidy.html#introduction",
    "href": "tidy.html#introduction",
    "title": "4  Tidy",
    "section": "4.2 Introduction",
    "text": "4.2 Introduction\nIn the tidy step, we put the data into tidy form and clean it, which will make the data easier to analyze in the later steps. Despite the table from the previous chapter looking fairly clean, further inspection reveals some issues:\n\n\nCode\nimport_draft(start_year)[23:30,]\n\n\n# A tibble: 8 × 21\n  overall   team   player nat   pos   age   to    amateur_team gp    g     a    \n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 \"23\"      Pitts… Craig… \"CA\"  \"G\"   \"\"    \"\"    \"Ottawa 67'… \"\"    \"\"    \"\"   \n2 \"24\"      Phoen… Danie… \"CA\"  \"C\"   \"18\"  \"201… \"Drummondvi… \"973\" \"307\" \"389\"\n3 \"25\"      Color… Peter… \"US\"  \"D\"   \"19\"  \"200… \"Shattuck-S… \"32\"  \"1\"   \"1\"  \n4 \"26\"      Detro… Jesse… \"CA\"  \"D\"   \"18\"  \"200… \"Red Deer R… \"49\"  \"0\"   \"2\"  \n5 \"\"        Round… Round… \"\"    \"\"    \"\"    \"\"    \"\"           \"NHL… \"NHL… \"NHL…\n6 \"Overall\" Team   Player \"Nat… \"Pos\" \"Age\" \"To\"  \"Amateur Te… \"GP\"  \"G\"   \"A\"  \n7 \"27\"      Buffa… Cory … \"CA\"  \"D\"   \"18\"  \"201… \"Saskatoon … \"969\" \"21\"  \"137\"\n8 \"28\"      Pitts… Pavel… \"CZ\"  \"D\"   \"18\"  \"200… \"HC Kladno … \"12\"  \"0\"   \"0\"  \n# ℹ 10 more variables: pts &lt;chr&gt;, x &lt;chr&gt;, pim &lt;chr&gt;, gp_2 &lt;chr&gt;, w &lt;chr&gt;,\n#   l &lt;chr&gt;, t_o &lt;chr&gt;, sv_percent &lt;chr&gt;, gaa &lt;chr&gt;, ps &lt;chr&gt;\n\n\nThree problems that immediately come up are:\n\nTwo rows get inserted at the end of every round to indicate the round changed.\nNumbers are being coded as strings (overall, age, to, etc).\n(At least) one player is missing everything except for their pick number, name, team, position, nationality, and amateur team.\n\nBy doing a little bit of detective work with some of the other players with missing values elsewhere in the dataset, we notice that players who never played in the NHL have empty strings listed for everything except for the values attributes listed above. We will have to deal with this in the tidy step. Note that Hockey Reference begins listing player’s ages in the 2001 draft, but we aren’t going to use ages for our analysis so we won’t bother coming up for a remedy for the players drafted between 1996 and 2000. The number of picks in the draft has also changed over the years, we will ignore any player drafted after selection 224 (the number of picks in the 2025 NHL Entry Draft). Finally, it would be helpful to remove the columns we don’t care about.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy</span>"
    ]
  },
  {
    "objectID": "tidy.html#code",
    "href": "tidy.html#code",
    "title": "4  Tidy",
    "section": "4.3 Code",
    "text": "4.3 Code\nWe build a function to tidy the data. In particular, we want it to:\n\nRemove the rows added between rounds.\nCorrect the types of each column so we can use numeric columns in calculations.\nChange gp and ps values to 0 for players who never played in the NHL or have a negative ps.\nIf is.na(to), then the player never played in the NHL, so set it to the draft year.\nAdd a year column so we can adjust the stats of players drafted more recently.\nSelect the columns we care about (year, overall, pos, to, gp, and ps) in that order.\nRemove any players selected after \\(224^{\\text{th}}\\) overall.\n\nNote that there were originally two gp columns (one for games played and one for games played as a goalie, goalies have the same number in both), but when we used janitor::clean_names() it changed them to gp and gp_2. Additionally, we cannot remove the round separating rows by removing a specified row number since many of the drafts in our dataset have different numbers of picks per round, and some rounds within the same draft have even had a different numbers of picks. Finally, we remove\n\n\nCode\ntidy_draft &lt;- function(year){\n  draft_year_table &lt;- import_draft(year) |&gt; \n    filter(overall != \"Overall\" & overall != \"\" & as.numeric(overall) &lt; 225) |&gt; # remove extra rows and players after pick 224\n    type_convert() |&gt; # fix types \n    mutate(\"year\" = year, \"ps\" = pmax(coalesce(ps, 0), 0), \n           \"gp\" = coalesce(gp, 0), \"to\" = coalesce(to, year)) |&gt; \n    select(year, overall, to, pos, gp, ps) # columns we care about\n  draft_year_table\n}\n\ntidy_draft(1996)\n\n\n# A tibble: 224 × 6\n    year overall    to pos      gp    ps\n   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  1996       1  2015 D      1179  64.6\n 2  1996       2  2008 D       496  25.8\n 3  1996       3  2011 RW      822  56.6\n 4  1996       4  2000 C         3   0  \n 5  1996       5  2007 D       231   8.8\n 6  1996       6  2009 C       627  12.5\n 7  1996       7  2007 LW/C    545   9.2\n 8  1996       8  2004 D        44   0  \n 9  1996       9  2011 D       917  46.9\n10  1996      10  2004 D       209   2.7\n# ℹ 214 more rows\n\n\nThis is the form we will use for analysis later. We now load in all of the data and use rbind() to bind the tables together, giving us a single data frame to work with. Note that this function takes around 4 minutes to run (because of the Sys.sleep(10) line, which is necessary to prevent us getting rate limited). Note that I sent cache=TRUE on this chunk to speed up the rendering time.\n\n\nCode\nall_data &lt;- do.call(rbind, lapply(seq(start_year, end_year, 1),\n                   \\(x) tidy_draft(x)))\n\n\nWe can check that this data has loaded correctly, there should be between 5000 and 6000 rows (the number of picks in a draft has changed over the years, but is usually between 200 and 240, so 25 drafts will be between 5000 and 6000) and 6 columns:\n\n\nCode\ndim(all_data) # confirm there are 5000-6000 rows and 6 columns\n\n\n[1] 5890    6\n\n\nCode\nlength(unique(all_data$year)) # confirm all 25 years have been included\n\n\n[1] 25\n\n\nCode\nhead(all_data, 10)\n\n\n# A tibble: 10 × 6\n    year overall    to pos      gp    ps\n   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  1996       1  2015 D      1179  64.6\n 2  1996       2  2008 D       496  25.8\n 3  1996       3  2011 RW      822  56.6\n 4  1996       4  2000 C         3   0  \n 5  1996       5  2007 D       231   8.8\n 6  1996       6  2009 C       627  12.5\n 7  1996       7  2007 LW/C    545   9.2\n 8  1996       8  2004 D        44   0  \n 9  1996       9  2011 D       917  46.9\n10  1996      10  2004 D       209   2.7\n\n\nThese checks all returned what they should, so we proceed to the Transform step.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy</span>"
    ]
  },
  {
    "objectID": "transform.html",
    "href": "transform.html",
    "title": "5  Transform",
    "section": "",
    "text": "5.1 Setup\nCode\n# install.packages(\"tidyverse\")\n# install.packages(\"dplyr\")\nlibrary(tidyverse)\nlibrary(dplyr)\n\n\nsource(\"functions.R\") # load functions defined in prior chapters\nRight now this is just a bunch of EDA that I think is interesting. I will condense it and give it a logical flow later.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transform</span>"
    ]
  },
  {
    "objectID": "transform.html#introduction",
    "href": "transform.html#introduction",
    "title": "5  Transform",
    "section": "5.2 Introduction",
    "text": "5.2 Introduction\nNow that we have our data imported and cleaned, we need to transform the data before modelling and visualizing it. In particular, we wish to come up with a way of utilizing the ps and gp values in such a way that does not punish players who are still playing (and thus haven’t had as many seasons to increase their point share and games played.\n\n\nCode\npick_prop &lt;- all_data |&gt; \n  group_by(year) |&gt; \n  mutate(draft_gp = sum(gp), \n         draft_ps = sum(ps), \n         prop_gp = gp / draft_gp, \n         prop_ps = ps / draft_ps) |&gt; \n  group_by(overall) |&gt; \n  summarize(avg_prop_gp = mean(prop_gp), \n            avg_prop_ps = mean(prop_ps), \n            .groups = \"drop\") |&gt; \n  pivot_longer(cols = starts_with(\"avg\"))\n  \nggplot(pick_prop, aes(x = overall, y = value)) +\n  geom_point() + \n  geom_smooth(formula = y ~ log(x)) + \n  facet_wrap(~name)\n\n\n`geom_smooth()` using method = 'loess'\n\n\n\n\n\n\n\n\n\nLooking at these plots, there clearly appears to be an exponential pattern here. The games played and point share plots look quite similar, one noticeable difference is the point share one seems more spread out which makes sense since excellent players can have a significantly higher point share than good players, but they probably can’t have significantly more games played.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transform</span>"
    ]
  },
  {
    "objectID": "transform.html#eda",
    "href": "transform.html#eda",
    "title": "5  Transform",
    "section": "5.3 EDA",
    "text": "5.3 EDA\nFirst, we perform some EDA to get a feel for what our data looks like. First, we want to see how many players never made the NHL (ie gp = 0), how many only played in a few games (we’ll arbitrarily say this is 50 games, just over half of an 82 game season), and how many played in over 500 games.\n\n\nCode\nplayer_games &lt;- all_data |&gt; \n  mutate(none = ifelse(gp == 0, 1, 0), \n         few = ifelse(gp &gt; 0 & gp &lt;= 50, 1, 0),\n         many = ifelse(gp &gt;= 500, 1, 0))\n\nrates &lt;- c(sum(player_games$none) / nrow(player_games),\n           sum(player_games$few) / nrow(player_games), \n           sum(player_games$many / nrow(player_games)))\n\nrates\n\n\n[1] 0.5188870 0.1538603 0.1201400\n\n\nWe can see that a significant portion of our dataset never played in an NHL game or only played in a few games. Let’s look at this by year:\n\n\nCode\nplayer_games &lt;- player_games |&gt; \n  group_by(year) |&gt; \n  summarize(across(none:many, sum))\n\n\nsee how many players we have that have played in at least 1 NHL game and are not retired. This is equivalent to gp &gt;= 1 and to == 2025 (recall when we noted in the first chapter that players who are still playing have a to value of 2025.\n\n\nCode\nall_data |&gt; \n  filter(gp &gt;= 1 & to == 2025) |&gt; \n  nrow()\n\n\n[1] 742\n\n\nThere are 742 such players (about 13% of our dataset) who meet this criteria, and who we will have to adjust the ps and gp values for. We can see in the plot below that (unsurprisingly) most of these players were drafted recently.\n\n\nCode\nplayer_adj &lt;- all_data |&gt; \n  filter(gp == 0) |&gt;\n  group_by(year) |&gt; \n  summarize(n = n())\n\nyear_stats &lt;- all_data |&gt; \n  group_by(year) |&gt; \n  summarize(total_gp = sum(gp), total_ps = sum(ps))\n\nggplot(player_adj, aes(x = year, y = n)) +\n  geom_point() + \n  labs(title = \"Number of Current Players Drafted by Year\", \n       x = \"Draft Year\", y = \"Number of Players\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(year_stats, aes(x = year, y = total_gp)) + \n  geom_point()\n\n\n\n\n\n\n\n\n\nCode\nggplot(year_stats, aes(x = year, y = total_ps)) + \n  geom_point()",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transform</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "ChatGPT Usage (will add link when done)\nValuation of NHL Draft Picks using Functional Data Analysis\nExamining the value of NHL Draft picks\nNHL draft: What does it cost to trade up?\nHockeyReference\n\n\n\nChatGPT Usage (will add link when done)\nValuation of NHL Draft Picks using Functional Data Analysis\nExamining the value of NHL Draft picks\nNHL draft: What does it cost to trade up?\nHockeyReference\nR for Data Science (2e)\nDevOps for Data Science\nHappy Git and GitHub for the useR\nMastering Shiny\n\nFor now this is just a list of links. Later I will formalize it.",
    "crumbs": [
      "References"
    ]
  }
]